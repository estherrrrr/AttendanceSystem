package com.etc.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ClassesExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	public ClassesExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andCnameIsNull() {
			addCriterion("cname is null");
			return (Criteria) this;
		}

		public Criteria andCnameIsNotNull() {
			addCriterion("cname is not null");
			return (Criteria) this;
		}

		public Criteria andCnameEqualTo(String value) {
			addCriterion("cname =", value, "cname");
			return (Criteria) this;
		}

		public Criteria andCnameNotEqualTo(String value) {
			addCriterion("cname <>", value, "cname");
			return (Criteria) this;
		}

		public Criteria andCnameGreaterThan(String value) {
			addCriterion("cname >", value, "cname");
			return (Criteria) this;
		}

		public Criteria andCnameGreaterThanOrEqualTo(String value) {
			addCriterion("cname >=", value, "cname");
			return (Criteria) this;
		}

		public Criteria andCnameLessThan(String value) {
			addCriterion("cname <", value, "cname");
			return (Criteria) this;
		}

		public Criteria andCnameLessThanOrEqualTo(String value) {
			addCriterion("cname <=", value, "cname");
			return (Criteria) this;
		}

		public Criteria andCnameLike(String value) {
			addCriterion("cname like", value, "cname");
			return (Criteria) this;
		}

		public Criteria andCnameNotLike(String value) {
			addCriterion("cname not like", value, "cname");
			return (Criteria) this;
		}

		public Criteria andCnameIn(List<String> values) {
			addCriterion("cname in", values, "cname");
			return (Criteria) this;
		}

		public Criteria andCnameNotIn(List<String> values) {
			addCriterion("cname not in", values, "cname");
			return (Criteria) this;
		}

		public Criteria andCnameBetween(String value1, String value2) {
			addCriterion("cname between", value1, value2, "cname");
			return (Criteria) this;
		}

		public Criteria andCnameNotBetween(String value1, String value2) {
			addCriterion("cname not between", value1, value2, "cname");
			return (Criteria) this;
		}

		public Criteria andTidIsNull() {
			addCriterion("tid is null");
			return (Criteria) this;
		}

		public Criteria andTidIsNotNull() {
			addCriterion("tid is not null");
			return (Criteria) this;
		}

		public Criteria andTidEqualTo(Integer value) {
			addCriterion("tid =", value, "tid");
			return (Criteria) this;
		}

		public Criteria andTidNotEqualTo(Integer value) {
			addCriterion("tid <>", value, "tid");
			return (Criteria) this;
		}

		public Criteria andTidGreaterThan(Integer value) {
			addCriterion("tid >", value, "tid");
			return (Criteria) this;
		}

		public Criteria andTidGreaterThanOrEqualTo(Integer value) {
			addCriterion("tid >=", value, "tid");
			return (Criteria) this;
		}

		public Criteria andTidLessThan(Integer value) {
			addCriterion("tid <", value, "tid");
			return (Criteria) this;
		}

		public Criteria andTidLessThanOrEqualTo(Integer value) {
			addCriterion("tid <=", value, "tid");
			return (Criteria) this;
		}

		public Criteria andTidIn(List<Integer> values) {
			addCriterion("tid in", values, "tid");
			return (Criteria) this;
		}

		public Criteria andTidNotIn(List<Integer> values) {
			addCriterion("tid not in", values, "tid");
			return (Criteria) this;
		}

		public Criteria andTidBetween(Integer value1, Integer value2) {
			addCriterion("tid between", value1, value2, "tid");
			return (Criteria) this;
		}

		public Criteria andTidNotBetween(Integer value1, Integer value2) {
			addCriterion("tid not between", value1, value2, "tid");
			return (Criteria) this;
		}

		public Criteria andTimetagIsNull() {
			addCriterion("timeTag is null");
			return (Criteria) this;
		}

		public Criteria andTimetagIsNotNull() {
			addCriterion("timeTag is not null");
			return (Criteria) this;
		}

		public Criteria andTimetagEqualTo(Integer value) {
			addCriterion("timeTag =", value, "timetag");
			return (Criteria) this;
		}

		public Criteria andTimetagNotEqualTo(Integer value) {
			addCriterion("timeTag <>", value, "timetag");
			return (Criteria) this;
		}

		public Criteria andTimetagGreaterThan(Integer value) {
			addCriterion("timeTag >", value, "timetag");
			return (Criteria) this;
		}

		public Criteria andTimetagGreaterThanOrEqualTo(Integer value) {
			addCriterion("timeTag >=", value, "timetag");
			return (Criteria) this;
		}

		public Criteria andTimetagLessThan(Integer value) {
			addCriterion("timeTag <", value, "timetag");
			return (Criteria) this;
		}

		public Criteria andTimetagLessThanOrEqualTo(Integer value) {
			addCriterion("timeTag <=", value, "timetag");
			return (Criteria) this;
		}

		public Criteria andTimetagIn(List<Integer> values) {
			addCriterion("timeTag in", values, "timetag");
			return (Criteria) this;
		}

		public Criteria andTimetagNotIn(List<Integer> values) {
			addCriterion("timeTag not in", values, "timetag");
			return (Criteria) this;
		}

		public Criteria andTimetagBetween(Integer value1, Integer value2) {
			addCriterion("timeTag between", value1, value2, "timetag");
			return (Criteria) this;
		}

		public Criteria andTimetagNotBetween(Integer value1, Integer value2) {
			addCriterion("timeTag not between", value1, value2, "timetag");
			return (Criteria) this;
		}

		public Criteria andMachinetagIsNull() {
			addCriterion("machineTag is null");
			return (Criteria) this;
		}

		public Criteria andMachinetagIsNotNull() {
			addCriterion("machineTag is not null");
			return (Criteria) this;
		}

		public Criteria andMachinetagEqualTo(Integer value) {
			addCriterion("machineTag =", value, "machinetag");
			return (Criteria) this;
		}

		public Criteria andMachinetagNotEqualTo(Integer value) {
			addCriterion("machineTag <>", value, "machinetag");
			return (Criteria) this;
		}

		public Criteria andMachinetagGreaterThan(Integer value) {
			addCriterion("machineTag >", value, "machinetag");
			return (Criteria) this;
		}

		public Criteria andMachinetagGreaterThanOrEqualTo(Integer value) {
			addCriterion("machineTag >=", value, "machinetag");
			return (Criteria) this;
		}

		public Criteria andMachinetagLessThan(Integer value) {
			addCriterion("machineTag <", value, "machinetag");
			return (Criteria) this;
		}

		public Criteria andMachinetagLessThanOrEqualTo(Integer value) {
			addCriterion("machineTag <=", value, "machinetag");
			return (Criteria) this;
		}

		public Criteria andMachinetagIn(List<Integer> values) {
			addCriterion("machineTag in", values, "machinetag");
			return (Criteria) this;
		}

		public Criteria andMachinetagNotIn(List<Integer> values) {
			addCriterion("machineTag not in", values, "machinetag");
			return (Criteria) this;
		}

		public Criteria andMachinetagBetween(Integer value1, Integer value2) {
			addCriterion("machineTag between", value1, value2, "machinetag");
			return (Criteria) this;
		}

		public Criteria andMachinetagNotBetween(Integer value1, Integer value2) {
			addCriterion("machineTag not between", value1, value2, "machinetag");
			return (Criteria) this;
		}

		public Criteria andStartdateIsNull() {
			addCriterion("startDate is null");
			return (Criteria) this;
		}

		public Criteria andStartdateIsNotNull() {
			addCriterion("startDate is not null");
			return (Criteria) this;
		}

		public Criteria andStartdateEqualTo(Date value) {
			addCriterionForJDBCDate("startDate =", value, "startdate");
			return (Criteria) this;
		}

		public Criteria andStartdateNotEqualTo(Date value) {
			addCriterionForJDBCDate("startDate <>", value, "startdate");
			return (Criteria) this;
		}

		public Criteria andStartdateGreaterThan(Date value) {
			addCriterionForJDBCDate("startDate >", value, "startdate");
			return (Criteria) this;
		}

		public Criteria andStartdateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("startDate >=", value, "startdate");
			return (Criteria) this;
		}

		public Criteria andStartdateLessThan(Date value) {
			addCriterionForJDBCDate("startDate <", value, "startdate");
			return (Criteria) this;
		}

		public Criteria andStartdateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("startDate <=", value, "startdate");
			return (Criteria) this;
		}

		public Criteria andStartdateIn(List<Date> values) {
			addCriterionForJDBCDate("startDate in", values, "startdate");
			return (Criteria) this;
		}

		public Criteria andStartdateNotIn(List<Date> values) {
			addCriterionForJDBCDate("startDate not in", values, "startdate");
			return (Criteria) this;
		}

		public Criteria andStartdateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("startDate between", value1, value2, "startdate");
			return (Criteria) this;
		}

		public Criteria andStartdateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("startDate not between", value1, value2, "startdate");
			return (Criteria) this;
		}

		public Criteria andEnddateIsNull() {
			addCriterion("endDate is null");
			return (Criteria) this;
		}

		public Criteria andEnddateIsNotNull() {
			addCriterion("endDate is not null");
			return (Criteria) this;
		}

		public Criteria andEnddateEqualTo(Date value) {
			addCriterionForJDBCDate("endDate =", value, "enddate");
			return (Criteria) this;
		}

		public Criteria andEnddateNotEqualTo(Date value) {
			addCriterionForJDBCDate("endDate <>", value, "enddate");
			return (Criteria) this;
		}

		public Criteria andEnddateGreaterThan(Date value) {
			addCriterionForJDBCDate("endDate >", value, "enddate");
			return (Criteria) this;
		}

		public Criteria andEnddateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("endDate >=", value, "enddate");
			return (Criteria) this;
		}

		public Criteria andEnddateLessThan(Date value) {
			addCriterionForJDBCDate("endDate <", value, "enddate");
			return (Criteria) this;
		}

		public Criteria andEnddateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("endDate <=", value, "enddate");
			return (Criteria) this;
		}

		public Criteria andEnddateIn(List<Date> values) {
			addCriterionForJDBCDate("endDate in", values, "enddate");
			return (Criteria) this;
		}

		public Criteria andEnddateNotIn(List<Date> values) {
			addCriterionForJDBCDate("endDate not in", values, "enddate");
			return (Criteria) this;
		}

		public Criteria andEnddateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("endDate between", value1, value2, "enddate");
			return (Criteria) this;
		}

		public Criteria andEnddateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("endDate not between", value1, value2, "enddate");
			return (Criteria) this;
		}

		public Criteria andStudentcountIsNull() {
			addCriterion("studentCount is null");
			return (Criteria) this;
		}

		public Criteria andStudentcountIsNotNull() {
			addCriterion("studentCount is not null");
			return (Criteria) this;
		}

		public Criteria andStudentcountEqualTo(Integer value) {
			addCriterion("studentCount =", value, "studentcount");
			return (Criteria) this;
		}

		public Criteria andStudentcountNotEqualTo(Integer value) {
			addCriterion("studentCount <>", value, "studentcount");
			return (Criteria) this;
		}

		public Criteria andStudentcountGreaterThan(Integer value) {
			addCriterion("studentCount >", value, "studentcount");
			return (Criteria) this;
		}

		public Criteria andStudentcountGreaterThanOrEqualTo(Integer value) {
			addCriterion("studentCount >=", value, "studentcount");
			return (Criteria) this;
		}

		public Criteria andStudentcountLessThan(Integer value) {
			addCriterion("studentCount <", value, "studentcount");
			return (Criteria) this;
		}

		public Criteria andStudentcountLessThanOrEqualTo(Integer value) {
			addCriterion("studentCount <=", value, "studentcount");
			return (Criteria) this;
		}

		public Criteria andStudentcountIn(List<Integer> values) {
			addCriterion("studentCount in", values, "studentcount");
			return (Criteria) this;
		}

		public Criteria andStudentcountNotIn(List<Integer> values) {
			addCriterion("studentCount not in", values, "studentcount");
			return (Criteria) this;
		}

		public Criteria andStudentcountBetween(Integer value1, Integer value2) {
			addCriterion("studentCount between", value1, value2, "studentcount");
			return (Criteria) this;
		}

		public Criteria andStudentcountNotBetween(Integer value1, Integer value2) {
			addCriterion("studentCount not between", value1, value2, "studentcount");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table classes
	 * @mbggenerated  Fri Jul 20 21:05:12 CST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table classes
     *
     * @mbggenerated do_not_delete_during_merge Fri Jul 20 20:51:53 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}